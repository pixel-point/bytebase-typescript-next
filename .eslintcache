[{"/Users/ekaterinamartynko/work/bytebase-typescript-next/src/components/shared/mobile-menu/mobile-menu.tsx":"1"},{"size":6345,"mtime":1681483939810,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","suppressedMessages":"6","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vjil83","/Users/ekaterinamartynko/work/bytebase-typescript-next/src/components/shared/mobile-menu/mobile-menu.tsx",["7","8"],[],{"ruleId":"9","severity":1,"message":"10","line":19,"column":18,"nodeType":"11","messageId":"12","endLine":19,"endColumn":21,"suggestions":"13"},{"ruleId":"14","severity":1,"message":"15","line":115,"column":24,"nodeType":"16","messageId":"17","endLine":115,"endColumn":29},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["18","19"],"react/no-array-index-key","Do not use Array index in keys","Identifier","noArrayIndex",{"messageId":"20","fix":"21","desc":"22"},{"messageId":"23","fix":"24","desc":"25"},"suggestUnknown",{"range":"26","text":"27"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"26","text":"28"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[636,639],"unknown","never"]